@model LibraryManagementSystem.Model.Model.Student
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm(Html.BeginForm("Add", "Student", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
    <div style="width:650px; margin-left:250px; margin-top:50px;" class="panel-group">
        <div class="panel panel-success">
            <div class="panel-heading">
                <div class="panel-title">Sign up Student</div>
            </div>
            <div class="panel-body">
                <div class="form-group row">
                    @if (ViewBag.FMsg != null)
                    {
                        <p style="color: red;  margin-left:10px; font-weight: bolder">@(ViewBag.FMsg)</p>
                    }


                </div>
                <div class="form-group row">
                    @Html.Label("Code", "Student ID *", new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.Code, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.Code, null, new { @class = "text-danger" })
                    </div>

                </div>


                <div class="form-group row">
                    @Html.Label("Name", "Name *", new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.Name, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.Name, null, new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group row">
                    @Html.Label("Email", "Email Address *", new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.Email, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.Email, null, new { @class = "text-danger" })
                    </div>

                </div>


                <div class="form-group row">
                    @Html.Label("Address", "Address *", new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.Address, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.Address, null, new { @class = "text-danger" })
                    </div>

                </div>


                <div class="form-group row">
                    @Html.Label("Contact", "Contact No *", new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.Contact, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.Contact, null, new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group row">
                    @Html.Label("Password", "Password *", new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.PasswordFor(c => c.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.Password, null, new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group row">
                    @Html.Label("Upload", "Upload *", new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        <input type="file" name="ImageData" class="btn btn-primary" onchange="fileCheck(this);" />
                        @Html.ValidationMessageFor(c => c.Data, null, new { @class = "text-danger" })
                    </div>

                </div>


                <div class="col-md-4 pull-right col-md-offset-4">
                    <input type="submit" class="btn btn-success" value="Save" />
                </div>
            </div>
        </div>


    </div>

}


@section scripts
{

    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>


    <script type="text/javascript">

        function fileCheck(obj) {
            var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
            if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
                alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
            }
            else {
                
            }

        }
    </script>

}
